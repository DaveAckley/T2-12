/*
 * Base device tree for BeagleBone Green as used in the T2 indefinitely scalable tile
 * 
 * Revisions Copyrignt (C) 2017 The Regents of the University of New Mexico
 * Author: Dave Ackley <ackley@ackleyshack.com>
 *
 * Based on am335x-bonegreen.dts, which is
 * Copyright (C) 2012 Texas Instruments Incorporated - http://www.ti.com/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */
/dts-v1/;

#include "am33xx.dtsi"
#include "am335x-bone-common.dtsi"

/* AHAX: 2017-05-19 PRUSS option: For now we are going with UIO.. */
#include "am33xx-pruss-uio.dtsi"

/ {
	model = "TI AM335x BeagleBone Green T2 Project";
	compatible = "ti,am335x-bone-green", "ti,am335x-bone-black", "ti,am335x-bone", "ti,am33xx";
};

&ldo3_reg {
	regulator-min-microvolt = <1800000>;
	regulator-max-microvolt = <1800000>;
	regulator-always-on;
};

&mmc1 {
	vmmc-supply = <&vmmcsd_fixed>;
};

&mmc2 {
	vmmc-supply = <&vmmcsd_fixed>;
	pinctrl-names = "default";
	pinctrl-0 = <&emmc_pins>;
	bus-width = <8>;
	status = "okay";
};

&cpu0_opp_table {
	/*
	 * All PG 2.0 silicon may not support 1GHz but some of the early
	 * BeagleBone Blacks have PG 2.0 silicon which is guaranteed
	 * to support 1GHz OPP so enable it for PG 2.0 on this board.
	 */
	oppnitro@1000000000 {
		opp-supported-hw = <0x06 0x0100>;
	};
};

/****************************************
* Pin Muxing
****************************************/
&am33xx_pinmux {
	 // From ebb chp13 overlay sample dts
         pru_pru_pins: pinmux_pru_pru_pins {   // The PRU pin modes
            pinctrl-single,pins = <
               0x1a4 0x05  // P9_27 pr1_pru0_pru_r30_5, MODE5 | OUTPUT | PRU
               0x19c 0x26  // P9_28 pr1_pru0_pru_r31_3, MODE6 | INPUT | PRU
            >;
         };


      /* OUTPUT  GPIO(mode7) 0x07 pulldown, 0x17 pullup, 0x?f no pullup/down */
      /* INPUT   GPIO(mode7) 0x27 pulldown, 0x37 pullup, 0x?f no pullup/down */

	 // SPI0 PINS AS GPIOS FOR TESTING, WITH D0 AS OUTPUT
         linux_bitbang_spi_pins: pinmux_linux_bitbang_spi_pins {   // GPIO pins for linux
            pinctrl-single,pins = <
	       0x074 0x0f  // P9_13  PINS=29 OUTPUT  MODE7 no pullup/down GPIO=31  T2=IO_OCDR
	       0x040 0x0f  // P9_15  PINS=16 OUTPUT  MODE7 no pullup/down GPIO=48  T2=IO_MODE
	       0x15c 0x0f  // P9_17  PINS=87 OUTPUT  MODE7 no pullup/down GPIO=5   T2=SPI0_CS0
	       0x158 0x27  // P9_18  PINS=86 INPUT   MODE7 pulldown       GPIO=4   T2=SPI0_D1
	       0x154 0x0f  // P9_21  PINS=85 OUTPUT  MODE7 no pullup/down GPIO=3   T2=SPI0_D0
	       0x150 0x0f  // P9_22  PINS=84 OUTPUT  MODE7 no pullup/down GPIO=2   T2=SPI0_SCLK
            >;
         };

	 // SPI0 PINS AS GPIOS FOR TESTING, WITH D0 AS INPUT
         linux_bitbang_spidin_pins: pinmux_linux_bitbang_spidin_pins {   // GPIO pins for linux
            pinctrl-single,pins = <
	       0x074 0x0f  // P9_13  PINS=29 OUTPUT  MODE7 no pullup/down GPIO=31  T2=IO_OCDR
	       0x040 0x0f  // P9_15  PINS=16 OUTPUT  MODE7 no pullup/down GPIO=48  T2=IO_MODE
	       0x15c 0x0f  // P9_17  PINS=87 OUTPUT  MODE7 no pullup/down GPIO=5   T2=SPI0_CS0
	       0x158 0x27  // P9_18  PINS=86 INPUT   MODE7 pulldown       GPIO=4   T2=SPI0_D1
	       0x154 0x27  // P9_21  PINS=85 INPUT   MODE7 pulldown       GPIO=3   T2=SPI0_D0
	       0x150 0x0f  // P9_22  PINS=84 OUTPUT  MODE7 no pullup/down GPIO=2   T2=SPI0_SCLK
            >;
         };

	 // ET_ITC default pins (split PRU/Linux gpio)
         ET_ITC_default_pins: pinmux_ET_ITC_default_pins {
            pinctrl-single,pins = <
               0x19c 0x0d  // P9_28  PINS=103 OUTPUT MODE5 no pullup/down GPIO=113 T2=ET_TXRDY pr1_pru0_pru_r30_3
               0x19a 0x0d  // P9_42B PINS=??  OUTPUT MODE5 no pullup/down GPIO=114 T2=ET_TXDAT pr1_pru0_pru_r30_4
               0x164 0x2f  // P9_42A PINS=89  INPUT  MODE7 no pullup/down GPIO=7   T2=RSRVINP2 (conflicts with ET_TXDAT, must be input)
               0x190 0x2e  // P9_31  PINS=100 INPUT  MODE6 no pullup/down GPIO=110 T2=ET_RXRDY pr1_pru0_pru_r31_0
               0x194 0x2e  // P9_29  PINS=101 INPUT  MODE6 no pullup/down GPIO=111 T2=ET_RXDAT pr1_pru0_pru_r31_1
               0x090 0x0f  // P8_07  PINS=36  OUTPUT MODE7 no pullup/down GPIO=66  T2=ET_ORQLK
               0x094 0x0f  // P8_08  PINS=37  OUTPUT MODE7 no pullup/down GPIO=67  T2=ET_OGRLK
               0x09c 0x2f  // P8_09  PINS=39  INPUT  MODE7 no pullup/down GPIO=69  T2=ET_IRQLK
               0x098 0x2f  // P8_10  PINS=38  INPUT  MODE7 no pullup/down GPIO=68  T2=ET_IGRLK
            >;
         }

	 // ET_ITC all gpio pins (Linux gpio)
         ET_ITC_all_gpio_pins: pinmux_ET_ITC_all_gpio_pins {
            pinctrl-single,pins = <
XXX
	       0x074 0x0f  // P9_13  PINS=29 OUTPUT  MODE7 no pullup/down GPIO=31  T2=IO_OCDR
	       0x040 0x0f  // P9_15  PINS=16 OUTPUT  MODE7 no pullup/down GPIO=48  T2=IO_MODE
	       0x15c 0x0f  // P9_17  PINS=87 OUTPUT  MODE7 no pullup/down GPIO=5   T2=SPI0_CS0
	       0x158 0x27  // P9_18  PINS=86 INPUT   MODE7 pulldown       GPIO=4   T2=SPI0_D1
	       0x154 0x27  // P9_21  PINS=85 INPUT   MODE7 pulldown       GPIO=3   T2=SPI0_D0
	       0x150 0x0f  // P9_22  PINS=84 OUTPUT  MODE7 no pullup/down GPIO=2   T2=SPI0_SCLK
            >;
         }

	// P9_11_default_pin: pinmux_P9_11_default_pin {
	// 	pinctrl-single,pins = <0x070  0x36>; };     /* Mode 6 uart */
	// P9_11_gpio_pin: pinmux_P9_11_gpio_pin {
	// 	pinctrl-single,pins = <0x070  0x2F>; };     /* Mode 7, RxActive */


	// A15_spi_pin: pinmux_A15_spi_pin {
	// 	pinctrl-single,pins = <
	// 		BLUE_IO(108, PIN_INPUT_PULLUP | MUX_MODE4) /* spi1_cs1 */
	// 	>;
	// };

	// mux_helper_pins: pins {
	// 	pinctrl-single,pins = <
	// 		/* PRU encoder input */
	// 		0x03c 0x36	/* P8_15,PRU0_r31_15,MODE6 */
	// 		0x038 0x36	/* P8_16,PRU0_r31_16,MODE6 */

	// 		/* PRU Servo output */
	// 		0x0e0 0x25	/*pru1_pru_r30_8, MODE5*/
	// 		0x0e8 0x25	/*pru1_pru_r30_10, MODE5 */
	// 		0x0e4 0x25	/*pr1_pru1_pru_r30_9, MODE5 */
	// 		0x0ec 0x25	/*pru1_pru_r30_11, MODE5 */
	// 		0x0b8 0x25	/*pru1_pru_r30_6, MODE5 */
	// 		0x0bc 0x25	/*pru1_pru_r30_7, MODE5 */
	// 		0x0b0 0x25	/*pru1_pru_r30_4, MODE5 */
	// 		0x0b4 0x25	/*pru1_pru_r30_5, MODE5 */

	// 		/* GPIO Inputs */
	// 		0x09c 0x37	/*P8.9  Pause BUTTON, input pullup*/
	// 		0x098 0x37	/*P8.10 MODE BUTTON input pullup*/
	// 		0x1AC 0x37	/*P9.25 MPU-9150 INTERRUPT IN*/

	// 		/* GPIO Outputs
	// 		0x090 0x0F	/*P8.7 - R7*/
	// 		0x094 0x0F	/*P8.8*/
	// 		0x028 0x0F	/*P8.14*/
	// 		0x02C 0x0F	/*P8.17*/
	// 		0x08c 0x0F	/*P8.18*/
	// 		0x07c 0x0F	/*P8.26*/
	// 		/* 0x0?? 0x0F	/*P8.32 - T5 - BATT_LED3 */
	// 		0x0cc 0x0F	/*P8.34*/
	// 		0x0C8 0x0F	/*P8.36*/
	// 		0x0a8 0x0F	/*P8.43*/
	// 		0x0ac 0x0F	/*P8.44*/
	// 		0x0a0 0x0F	/*P8.45*/
	// 		0x0a4 0x0F	/*P8.46*/
	// 		0x078 0x0F	/*P9.12*/
	// 		0x074 0x0F	/*P9.13*/
	// 		0x040 0x0F	/*P9.15*/
	// 		0x044 0x0F	/*P9.23*/
	// 		0x1b4 0x0F	/*P9.41*/
	// 	>;
	// };

	// /****************************************/
	// /* DSM2 UART4 pinmux                    */
	// /* only pin that swaps between GPIO&UART*/
	// /****************************************/
	// P9_11_default_pin: pinmux_P9_11_default_pin {
	// 	pinctrl-single,pins = <0x070  0x36>; };     /* Mode 6 uart */
	// P9_11_gpio_pin: pinmux_P9_11_gpio_pin {
	// 	pinctrl-single,pins = <0x070  0x2F>; };     /* Mode 7, RxActive */
	// P9_11_gpio_pu_pin: pinmux_P9_11_gpio_pu_pin {
	// 	pinctrl-single,pins = <0x070  0x37>; };     /* Mode 7, Pull-Up, RxActive */
	// P9_11_gpio_pd_pin: pinmux_P9_11_gpio_pd_pin {
	// 	pinctrl-single,pins = <0x070  0x27>; };     /* Mode 7, Pull-Down, RxActive */
	// P9_11_uart_pin: pinmux_P9_11_uart_pin {
	// 	pinctrl-single,pins = <0x070  0x36>; };     /* Mode 6, uart */
};

&ocp {
      pruss {
         pinctrl-names = "default";
         pinctrl-0 = <&pru_pru_pins>;
      };

      /****************************************
       * activates the pinmux helper list of pin modes
       * I HAVE NO IDEA WHAT THIS ACTUALLY DOES IF ANYTHING HALP
       ****************************************/
/* SWITCHING TO GPIO TEST FOR NOW 6/1/17
        test_helper: helper {
		compatible = "bone-pinmux-helper";
		pinctrl-names = "default";
		pinctrl-0 = <&pru_pru_pins>;
		status = "okay";
       };
*/
        test_helper: helper {
		compatible = "bone-pinmux-helper";
		pinctrl-names = "default", "spidin";
		pinctrl-0 = <&linux_bitbang_spi_pins>;
		pinctrl-1 = <&linux_bitbang_spidin_pins>;
		status = "okay";
       };

       ET_ITC_helper: helper {
		compatible = "bone-pinmux-helper";
		pinctrl-names = "default", "gpio";
		pinctrl-0 = <&ET_ITC_default_pins>;
		pinctrl-1 = <&ET_ITC_all_gpio_pins>;
		status = "okay";
       };

	// /****************************************
	//  * configurable DSM2 pin swaps between GPIO & UART4 at runtime
	//  ****************************************/
	// P9_11_pinmux {
	// 	compatible = "bone-pinmux-helper";
	// 	status = "okay";
	// 	pinctrl-names = "default", "gpio", "gpio_pu", "gpio_pd", "uart";

	// 	pinctrl-0 = <&P9_11_default_pin>;
	// 	pinctrl-1 = <&P9_11_gpio_pin>;
	// 	pinctrl-2 = <&P9_11_gpio_pu_pin>;
	// 	pinctrl-3 = <&P9_11_gpio_pd_pin>;
	// 	pinctrl-4 = <&P9_11_uart_pin>;
	// };
};


